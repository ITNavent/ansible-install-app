#! /bin/sh
### BEGIN INIT INFO
# Provides:             {{ app_name }}
# Required-Start:       $syslog $remote_fs
# Required-Stop:        $syslog $remote_fs
# Should-Start:         $local_fs
# Should-Stop:          $local_fs
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    {{ app_name }}
# Description:          {{ app_name }}
### END INIT INFO
#
# {{ ansible_managed }}
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/home/ubuntu/navent/bin
DAEMON=/home/ubuntu/navent/bin/startup.sh
DAEMON_ARGS=
NAME={{ app_name }}
DESC={{ app_name }}

RUNDIR=/home/ubuntu/navent/app
PIDFILE=$RUNDIR/{{ app_name }}.pid

test -x $DAEMON || exit 0

if [ -r /etc/default/$NAME ]
then
        . /etc/default/$NAME
fi

. /lib/lsb/init-functions

set -e

case "$1" in
  start)
        echo -n "Starting $DESC: "
        mkdir -p $RUNDIR
        touch $PIDFILE
        chown {{app_user}}:{{app_group}} $RUNDIR $PIDFILE
        chmod 755 $RUNDIR

        if [ -n "$ULIMIT" ]
        then
                ulimit -n $ULIMIT || true
        fi

        if start-stop-daemon --start --quiet --oknodo --umask {{app_service_umask}} --pidfile $PIDFILE --chuid {{app_user}}:{{app_group}} --exec $DAEMON -- $DAEMON_ARGS
        then
                echo "$NAME."
        else
                echo "failed"
        fi
        ;;
  stop)
        echo -n "Stopping $DESC: "

        su {{app_user}} -s /bin/sh -c "/home/ubuntu/navent/bin/shutdown.sh"

        if start-stop-daemon --stop --retry forever/TERM/1 --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON
        then
                echo "$NAME."
        else
                echo "failed"
        fi
        rm -f $PIDFILE
        sleep 1
        ;;

  restart|force-reload)
        ${0} stop
        ${0} start
        ;;

  status)
        status_of_proc -p ${PIDFILE} ${DAEMON} ${NAME}
        ;;

  *)
        echo "Usage: /etc/init.d/$NAME {start|stop|restart|force-reload|status}" >&2
        exit 1
        ;;
esac

exit 0